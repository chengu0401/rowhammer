//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31294372
// Cuda compilation tools, release 11.7, V11.7.64
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_52
.address_size 64

	// .globl	_Z7kernel1PPiiiS_ii
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[7] = {120, 58, 32, 37, 100, 10, 0};

.visible .entry _Z7kernel1PPiiiS_ii(
	.param .u64 _Z7kernel1PPiiiS_ii_param_0,
	.param .u32 _Z7kernel1PPiiiS_ii_param_1,
	.param .u32 _Z7kernel1PPiiiS_ii_param_2,
	.param .u64 _Z7kernel1PPiiiS_ii_param_3,
	.param .u32 _Z7kernel1PPiiiS_ii_param_4,
	.param .u32 _Z7kernel1PPiiiS_ii_param_5
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<17>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z7kernel1PPiiiS_ii_param_0];
	ld.param.u32 	%r1, [_Z7kernel1PPiiiS_ii_param_1];
	cvt.s64.s32 	%rd3, %r1;
	shl.b64 	%rd4, %rd3, 3;
	add.s64 	%rd5, %rd1, %rd4;
	ld.u64 	%rd6, [%rd5];
	cvt.s64.s32 	%rd7, %r1;
	shl.b64 	%rd8, %rd7, 3;
	add.s64 	%rd9, %rd1, %rd8;
	ld.u64 	%rd2, [%rd9];
	// begin inline asm
	ld.param.cv.u32 %r2, [%rd2];
	// end inline asm
	st.u32 	[%rd6], %r2;
	cvt.s64.s32 	%rd10, %r1;
	shl.b64 	%rd11, %rd10, 3;
	add.s64 	%rd12, %rd1, %rd11;
	ld.u64 	%rd13, [%rd12];
	ld.u32 	%r3, [%rd13];
	st.u32 	[%SP+0], %r3;
	mov.u64 	%rd14, $str;
	cvta.global.u64 	%rd15, %rd14;
	add.u64 	%rd16, %SP, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r4, [retval0+0];
	} // callseq 0
	ret;

}
	// .globl	_Z7kernel2Pii
.visible .entry _Z7kernel2Pii(
	.param .u64 _Z7kernel2Pii_param_0,
	.param .u32 _Z7kernel2Pii_param_1
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z7kernel2Pii_param_0];
	ld.param.u32 	%r1, [_Z7kernel2Pii_param_1];
	cvt.s64.s32 	%rd3, %r1;
	shl.b64 	%rd4, %rd3, 2;
	add.s64 	%rd5, %rd1, %rd4;
	// begin inline asm
	ld.param.cv.u32 %r2, [%rd1];
	// end inline asm
	st.u32 	[%rd5], %r2;
	ret;

}

